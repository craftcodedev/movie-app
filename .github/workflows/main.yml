name: CI

on: [push]

jobs:
  CI:
    runs-on: ubuntu-latest
    
    env:
      IMAGE: craft-code:movil-app
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: build
        run: docker build . --file etc/docker/Dockerfile --target development --tag $IMAGE
      - name: tests
        run: docker run -w /var/app/ -i $IMAGE node_modules/mocha/bin/mocha

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    
    env:
      APP_NAME: movil-app
      ENVIRONMENT: prod
      GCP_PROJECT_ID: craft-code-255613
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      GCP_REGISTRY_HOSTNAME: eu.gcr.io
      GCE_INSTANCE: movie-app
      GCE_INSTANCE_ZONE: europe-west1-b
    
    steps:
      - name: Set IMAGE variables
        run: echo ::set-env name=IMAGE::$APP_NAME-$ENVIRONMENT:$GITHUB_SHA
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup gcloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ env.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}
          export_default_credentials: true
      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker
      - name: Build image 
        run: docker build . --file etc/docker/Dockerfile --target production --tag $GCP_REGISTRY_HOSTNAME/$GCP_PROJECT_ID/$IMAGE
      - name: Push the Docker image to Google Container Registry
        run: docker push $GCP_REGISTRY_HOSTNAME/$GCP_PROJECT_ID/$IMAGE
      - name: Deploy
        run: |-
          gcloud compute instances update-container "$GCE_INSTANCE" \
          --zone "$GCE_INSTANCE_ZONE" \
          --container-image "$GCP_REGISTRY_HOSTNAME/$GCP_PROJECT_ID/$IMAGE"
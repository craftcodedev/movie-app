name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      APP_NAME: movil-app
      ENVIRONMENT: dev
      GKE_ZONE: us-west1-a
      GCP_PROJECT_ID: craft-code-255613
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      GCP_REGISTRY_HOSTNAME: eu.gcr.io
      #RELEASE_VERSION: $GITHUB_SHA
    
    steps:
      - name: Set IMAGE variables
        run: echo ::set-env name=IMAGE::$APP_NAME-$ENVIRONMENT:$GITHUB_SHA
      - name: Checkout
        uses: actions/checkout@v2
      - name: build
        run: docker build . --file etc/docker/Dockerfile --tag $IMAGE
      - name: tests
        run: docker run -w /var/app/ -i $IMAGE node_modules/mocha/bin/mocha
      - name: Setup GCLOUD CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ env.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Configure docker to use the gcloud command-line tool as a credential helper
        run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker
      - name: Push the Docker image to Google Container Registry
        run: docker push $GCP_REGISTRY_HOSTNAME/$GCP_PROJECT_ID/$IMAGE
      #- name: define variables
      #  run: echo define variables $RELEASE_VERSION $IMAGE

      #a√±ado el uso de artefactos: todo el codigo compilado lo publico en algun sitio donde un job(deploy) siguiente pueda recogerlo y desplegarlo
      #- name: publish de code
      #- name: 
      # echo ::set-env name=REGISTRY::$REGISTRY_HOSTNAME/$GCP_PROJECT_ID/$APP_NAME-$ENVIRONMENT